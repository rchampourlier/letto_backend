// Code generated by goagen v1.3.0, DO NOT EDIT.
//
// API "letto": triggers Resource Client
//
// Command:
// $ goagen
// --design=gitlab.com/letto/letto_backend/design
// --out=$(GOPATH)/src/gitlab.com/letto/letto_backend
// --version=v1.3.0

package client

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

// WebhookTriggersPath computes a request path to the webhook action of triggers.
func WebhookTriggersPath(group string) string {
	param0 := group

	return fmt.Sprintf("/api/triggers/webhook/%s", param0)
}

// WebhookTriggersPath2 computes a request path to the webhook action of triggers.
func WebhookTriggersPath2(group string) string {
	param0 := group

	return fmt.Sprintf("/api/triggers/webhook/%s", param0)
}

// Receive incoming webhook
func (c *Client) WebhookTriggers(ctx context.Context, path string) (*http.Response, error) {
	req, err := c.NewWebhookTriggersRequest(ctx, path)
	if err != nil {
		return nil, err
	}
	return c.Client.Do(ctx, req)
}

// NewWebhookTriggersRequest create the request corresponding to the webhook action endpoint of the triggers resource.
func (c *Client) NewWebhookTriggersRequest(ctx context.Context, path string) (*http.Request, error) {
	scheme := c.Scheme
	if scheme == "" {
		scheme = "http"
	}
	u := url.URL{Host: c.Host, Scheme: scheme, Path: path}
	req, err := http.NewRequest("GET", u.String(), nil)
	if err != nil {
		return nil, err
	}
	return req, nil
}
